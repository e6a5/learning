services:
  # Error Handling Application
  app:
    build: .
    container_name: error-handling-app
    ports:
      - "8080:8080"
    environment:
      DB_DSN: app_user:app_password@tcp(mysql:3306)/error_handling_db
      REDIS_ADDR: redis:6379
      PORT: 8080
      LOG_LEVEL: info
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - default

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: error-handling-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: error_handling_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3307:3306"  # Different port to avoid conflicts
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: error-handling-redis
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_data:/data
      - ./scripts/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Chaos engineering tool (optional)
  chaos-proxy:
    image: nginx:alpine
    container_name: error-handling-chaos
    ports:
      - "8081:80"
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - mysql
      - redis
    profiles:
      - chaos  # Only start with 'docker-compose --profile chaos up'

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: error-handling-network 